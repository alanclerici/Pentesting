#!/usr/bin/env python3
import argparse
import sys
import subprocess
import inquirer
import re
from termcolor import colored

def ipEsValida(ip):
    # Patrón de expresión regular para validar direcciones IP
    patron_ip = r'^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$'

    # Verificar si la IP coincide con el patrón
    if re.match(patron_ip, ip):
        # Ahora, verifica que cada octeto esté en el rango correcto (0-255)
        octetos = ip.split('.')
        for octeto in octetos:
            if not (0 <= int(octeto) <= 255):
                return False
        return True
    else:
        return False

def getArgs():
    args = argparse.ArgumentParser(description='Interfaz de consola para el escaneo de puertos con NMAP')
    args.add_argument("-i","--ip", dest="ip",required=True, help="IP objetivo (Ej: -i 192.168.0.1)")
    args.add_argument("-d","--diccionario", dest="dic",required=True, help="Ruta del diccionario")
    args.add_argument("-r","--ruta", default="/", dest="ruta", help="Ruta para fuzear, '/' por defecto (Ej: -r /admin")
    salida = args.parse_args()

    #if not ipEsValida(salida.ip):
    #    print(colored(f"\n[!] Ip no valida\n","red"))
    #    sys.exit(1)

    return salida.ip, salida.ruta ,salida.dic

def gobuster(ip,ruta,dic,barra,extensiones):
    comando = ["gobuster","dir","-u",ip,"-w",dic,"-t","20","-b","403,404"]
    extensiones = ",".join(extensiones)
    #subprocess.run(comando)

def main():
    ip, ruta, dic = getArgs()
    questions = [
        inquirer.Checkbox('extensiones',
                        message="Agregar extensiones",
                        choices=['txt', 'php', 'html','js']),
        inquirer.Confirm('barra', message="¿Identificar subcarpetas?", default=True)

    ]
    respuestas = inquirer.prompt(questions)
    gobuster(ip,ruta,dic,respuestas['barra'],respuestas['extensiones'])

if __name__ == '__main__':
    main()
